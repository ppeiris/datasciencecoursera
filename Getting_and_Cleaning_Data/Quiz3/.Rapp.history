rand(10)
rand(10,1)
sample(1:40, 6, replace=F)
sample(1:40)
sample(1:40, 1)
for( b in a[,1]) { a[, "Z"] <- sample(1:40, 1) }
a
for( b in a[,1]) { a[, "Z"] <- sample(1:40, 1) }
i = 1
for( b in a[,1]) { a[i, "Z"] <- sample(1:40, 1) }
a
for( b in a[,1]) { a[i, "Z"] <- sample(1:40, 1); i <- i + 1 }
a
for( b in a[,1]) { a[i, "K"] <- sample(1:40, 1); i <- i + 1 }
a
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
activityLabels <- read.table(filename, col.names = c("activityId", "activityName"))
activityLabels <- read.table("activity_labels.txt", col.names = c("activityId", "activityName"))
activityLabels
activityLabels[activityLabels$activityId == 3, ]
activityLabels[activityLabels$activityId == 3, ]$activityName
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
run_analysis()
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
source("run_analysis.R")
run_analysis()
getwd()
setwd("/Users/prabath/Dropbox/RIT_Academics_Prabath/NoiseAndRandomProcesses_Spring2011/Note/datasciencecoursera/Getting_and_Cleaning_Data/Quiz3")
getwd()
"/Users/prabath/Dropbox/RIT_Academics_Prabath/NoiseAndRandomProcesses_Spring2011/Note/datasciencecoursera/Getting_and_Cleaning_Data/Project"
data <- read.csv("Fss06hid.csv")
data
str(data)
data$ACR
data[data$ACR == 3, ]
data[data$ACR == 3 & data$AGS == 6, ]
data[data$ACR == 3 & data$AGS == 6, ]
source("Quiz3Q1.R")
vec <- data[data$ACR == 3 & data$AGS == 6, ]
str(vec)
which(vec)
which(as.logical(vec))
as.logical(vec)
str(vec)
which(hello$type1 == 1 & hello$area == 3 & hello$Worth == 6)
which(data$ACR == 3 & data$AGS == 6)
source("Quiz3Q1.R")
source("Quiz3Q1.R")
library(jpeg)
img <- readJPEG(system.file("img", "jeff.jpg", package="jpeg"))
getwd()
img <- readJPEG(system.file("jeff", "jeff.jpg", package="jpeg"))
img <- readJPEG(system.file("img", "jeff.jpg", package="jpeg"))
img <- readJPEG(system.file(".", "jeff.jpg", package="jpeg"))
install.packages("jpeg")
img <- readJPEG(system.file(".", "jeff.jpg", package="jpeg"))
img <- readJPEG(system.file("/Users/prabath/Dropbox/RIT_Academics_Prabath/NoiseAndRandomProcesses_Spring2011/Note/datasciencecoursera/Getting_and_Cleaning_Data/Quiz3", "jeff.jpg", package="jpeg"))
img <- readJPEG(system.file("/Users/prabath/Dropbox/RIT_Academics_Prabath/NoiseAndRandomProcesses_Spring2011/Note/datasciencecoursera/Getting_and_Cleaning_Data/Quiz3/", "jeff.jpg", package="jpeg"))
readJPEG("jeff.jpg", native = FALSE)
img = readJPEG("jeff.jpg", native = FALSE)
img
img = readJPEG("jeff.jpg", native = TRUE)
img
img[30]
img[80]
quantile(img, c(30, 80))
quantile(img, probs = c(30, 80))
quantile(img, probs = c(30, 80)/100)
getwd()
source("Quiz3Q3.R")
source('~/Dropbox/RIT_Academics_Prabath/NoiseAndRandomProcesses_Spring2011/Note/datasciencecoursera/Getting_and_Cleaning_Data/Quiz3/Quiz3Q3.R', chdir = TRUE)
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
source("Quiz3Q3.R")
gdp = read.csv("getdata-data-GDP.csv", skip = 4)
gdp = gdp[1:190, ]
gdp_code = data.frame("CountryCode" = as.character(gdp[, 1]), "gdp" = ((gdp[, 5])))
gdp_code
ed = read.csv("getdata-data-EDSTATS_Country.csv")
ed_code = data.frame("X" = ed$CountryCode)
mdata = merge(gdp_code, ed_code, by.x = "CountryCode", by.y = "X")
print(mdata)
